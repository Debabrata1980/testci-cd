

# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

  #inputs:
  #  python-folder:
  #  description: Folder containing the python files.
  #  required: false
  #  default: './'

on:
  push:
    branches: [ "master", "dev","pytest","pytest_upd" ]
#  pull_request:
#    branches: [ "master" ]


permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: ubuntu:20.04 #node:10.18-jessie
    # Service containers to run with `container-job`
    services:
    # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        apt-get update -y
        apt-get install -y glibc-source libssl-dev
        python -m pip install --trusted-host pypi.org --upgrade pip
        pip install --trusted-host pypi.org flake8 pytest
        if [ -f requirements.txt ]; then pip install --trusted-host pypi.org -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: check the file in specific folder and Test with unittest
      run: |
           chmod +x testrun.sh
           cd .
           ./testrun.sh ./tests #${{ inputs.python-folder }}
      shell: bash    
      env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
#        python  *.py 
#        pytest my_fib.py
